# TODO: split up build matrix stuff to a separate workflow to include for checks in general
name: Flake

on:
  schedule:
    - cron: '0 1 * * *'
  workflow_dispatch:

jobs:
  update:
    name: Update
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.commit.outputs.changed }}
      head: ${{ steps.commit.outputs.head }}
    steps:
      - uses: cachix/install-nix-action@v20
        with:
          extra_nix_config: |
            system-features = benchmark big-parallel kvm nixos-test

      - uses: cachix/cachix-action@v12
        with:
          name: foosteros
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.REPO_KEY }}

      - name: Configure git
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email '41898282+github-actions[bot]@users.noreply.github.com'

      - run: nix -vL --show-trace flake update

      - id: commit
        name: Commit and stage changes
        run: |
          if ! git diff --exit-code --quiet flake.lock; then
            git commit -m 'flake: update inputs' flake.lock
            git push -f origin 'HEAD:ci/flake/${{ github.sha }}'

            echo 'changed=true' >> $GITHUB_OUTPUT
            echo 'head=ci/flake/${{ github.sha }}' >> $GITHUB_OUTPUT
          fi

      # TODO: remove whenever Nix (or crane) fixes this
      - name: 'TODO: Nix pls'
        run: |
          nix -vL build --no-link .#nixosConfigurations.bina.config.system.build.installBootLoader
        if: steps.commit.outputs.changed == 'true'

      - run: nix -vL --show-trace flake check --no-build
        if: steps.commit.outputs.changed == 'true'

  check:
    name: Run Flake Checks
    needs: [update]
    if: needs.update.outputs.changed == 'true'
    uses: ./.github/workflows/checks.yml
    with:
      REF_HEAD: '${{ needs.update.outputs.head }}'

  push:
    name: Push
    runs-on: ubuntu-latest
    needs: [update, check]
    if: needs.update.outputs.changed == 'true'
    steps:
      - uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.REPO_KEY }}
          fetch-depth: 2
          ref: '${{ needs.update.outputs.head }}'

      - name: Push changes
        run: |
          git pull --rebase origin '${{ github.ref }}'
          git push origin 'HEAD:${{ github.ref }}'
          git push origin -d '${{ needs.update.outputs.head }}'
